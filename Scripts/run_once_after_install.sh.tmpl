#!{{ lookPath "bash" }}

TVERREC=https://github.com/dongaba/TVerRec/archive/refs/tags/v3.0.2.tar.gz
PWSH=https://github.com/PowerShell/PowerShell/releases/download/v7.2.13/powershell-7.2.13-linux-arm64.tar.gz
CORES=$(($(nproc)+1))
LISTAPP="$HOME/Documents/list-app"
RES="2560 1570 60"
DISP=$(xrandr | grep -e " connected [^(]" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/")
MODELINE=$(cvt $(echo $RES) | grep -e "Modeline [^(]" | sed -r 's/.*Modeline (.*)/\1/')
MODERES=$(echo $MODELINE | grep -o -P '(?<=").*(?=")')
EXECUTABLE=("
$(echo $HOME/bin/*)
$(echo $HOME/.config/bspwm/*)
$(echo $HOME/.config/polybar/scripts/*)
$(echo $HOME/Scripts/change-wallpaper.app/Contents/MacOS/change-wallpaper.sh)
")

{{ if eq .chezmoi.os "linux" }}
    {{ if eq .chezmoi.osRelease.id "archarm" }}

DLDIR="/data/data/com.termux/files/home/storage/movies"

    {{ end }}
{{ else }}

DLDIR="$HOME/Downloads"

{{ end }}

SERVICES=(
NetworkManager
sddm
bluetooth
tlp
mbpfan
)

function set_colors() {
    if [ -t 1 ] ; then
        RED=$(tput setaf 1); GREEN=$(tput setaf 2); YELLOW=$(tput setaf 3); CYAN=$(tput setaf 6);
        BOLD=$(tput bold); RESET=$(tput sgr0)
    else
        RED=""; GREEN=""; YELLOW=""; CYAN=""; BOLD=""; RESET=""
    fi
}

function install_list() {
        while IFS= read -r app ; do yay -S --noconfirm --needed $app; done < "$1"
}

function wait_yn(){
    YN="xxx"
    while [ $YN != 'y' ] && [ $YN != 'n' ] ; do read -p "$1 [y/n]" YN; done
}

clear
set_colors

# Option to exit
wait_yn "${YELLOW}ACITION${RESET} - Would you like to start with the install?"
if [[ $YN = y ]] ; then
    echo "${CYAN}NOTE${RESET} - Setup starting..."
else
    echo "${RED}ATTENTION${RESET} - Aborted. No changes were made to your system."
    exit
fi

{{ if eq .chezmoi.os "darwin" }}

# Install Rosetta
echo "${CYAN}NOTE${RESET} - Installing Rosetta."
sudo softwareupdate --install-rosetta --agree-to-licensesudo softwareupdate --install-rosetta --agree-to-license

# Install Brew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
(echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> /Users/$USER/.bashrc && source ~/.zshrc
eval "$(/opt/homebrew/bin/brew shellenv)"

# Install app from Brewfile
echo "${CYAN}NOTE${RESET} - Installing Brewfile app."
brew bundle install --file $HOME/Documents/Brewfile

{{ end }}

{{ if eq .chezmoi.os "linux" }}

# Configure AUR
echo "${CYAN}NOTE${RESET} - Configuering AUR."
pacman -Syyu --noconfirm --needed sudo wget git bat eza git-delta starship base-devel fontconfig
sudo sed -i -e "/^ *#Color$/c\ Color\n\ ILoveCandy" -e '/ParallelDownloads/s/^#//g' /etc/pacman.conf
sudo sed -i -e "/#MAKEFLAGS/s/2/$CORES/" -e '/#MAKEFLAGS/s/^#//' /etc/makepkg.conf

    {{ if eq .chezmoi.osRelease.id "archarm" }}

useradd -m -g users -G wheel,audio,video,storage -s /bin/bash user && echo user:user | chpasswd
sudo sed -i -e "/^ *root ALL=(ALL:ALL) ALL$/c\root ALL=(ALL:ALL) ALL\n\user ALL=(ALL) ALL" /etc/sudoers
sudo -i -u user bash << EOF
cd && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm &&
cd && rm -rf yay
EOF

    {{ else }}

cd && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm &&
cd && rm -rf yay

    {{ end }}

# Install listed pacakges
echo "${CYAN}NOTE${RESET} - Installing apps from $LISTAPP."
install_list $LISTAPP
fc-cache -fv

{{ end }}

echo "${CYAN}NOTE${RESET} - Installing custom app."
source $HOME/Scripts/custom.sh

echo "${CYAN}NOTE${RESET} - Setting some configuration."
source $HOME/Scripts/stage.sh
source $HOME/Scripts/config.sh

echo "${GREEN}OK${RESET} - Please log out and log back in for the changes to take effect."
