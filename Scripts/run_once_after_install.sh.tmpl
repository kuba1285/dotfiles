#!{{ lookPath "bash" }}

CORES=$(($(nproc)+1))
LISTAPP="$HOME/Documents/list-app"
EXECUTABLE=("
$(echo $HOME/bin/*)
$(echo $HOME/.config/bspwm/*)
$(echo $HOME/.config/polybar/scripts/*)
")
SERVICES=(
NetworkManager
sddm
bluetooth
tlp
mbpfan
)

function set_colors() {
    if [ -t 1 ] ; then
        RED=$(tput setaf 1); GREEN=$(tput setaf 2); YELLOW=$(tput setaf 3); CYAN=$(tput setaf 6);
        BOLD=$(tput bold); RESET=$(tput sgr0)
    else
        RED=""; GREEN=""; YELLOW=""; CYAN=""; BOLD=""; RESET=""
    fi
}

function install_list() {
        while IFS= read -r app ; do yay -S --noconfirm --needed $app; done < "$1"
}

function wait_yn(){
    YN="xxx"
    while [ $YN != 'y' ] && [ $YN != 'n' ] ; do read -p "$1 [y/n]" YN; done
}

clear
set_colors

# Option to exit
wait_yn "${YELLOW}ACITION${RESET} - Would you like to start with the install?"
if [[ $YN = y ]] ; then
    echo "${CYAN}NOTE${RESET} - Setup starting..."
else
    echo "${RED}ATTENTION${RESET} - Aborted. No changes were made to your system."
    exit
fi

{{ if eq .chezmoi.os "darwin" }}

# Install Rosetta
echo "${CYAN}NOTE${RESET} - Installing Rosetta."
sudo softwareupdate --install-rosetta --agree-to-licensesudo softwareupdate --install-rosetta --agree-to-license

# Install app from Brewfile
echo "${CYAN}NOTE${RESET} - Installing Brewfile app."
brew bundle install --file $HOME/Documents/Brewfile
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.bashrc

{{ end }}

{{ if eq .chezmoi.os "linux" }}

# Configure AUR
echo "${CYAN}NOTE${RESET} - Configuering AUR."
pacman -Syyu --noconfirm --needed sudo wget git bat eza git-delta starship base-devel fontconfig
sudo sed -i -e "/^ *#Color$/c\ Color\n\ ILoveCandy" /etc/pacman.conf
sudo sed -i '/ParallelDownloads/s/^#//g' /etc/pacman.conf
sudo sed -i "/#MAKEFLAGS/s/2/$CORES/" /etc/makepkg.conf
sudo sed -i '/#MAKEFLAGS/s/^#//' /etc/makepkg.conf

    {{ if eq .chezmoi.osRelease.id "archarm" }}

useradd -m -g users -G wheel,audio,video,storage -s /bin/bash user && echo user:user | chpasswd
sudo sed -i -e "/^ *root ALL=(ALL:ALL) ALL$/c\root ALL=(ALL:ALL) ALL\n\user ALL=(ALL) ALL" /etc/sudoers
sudo -i -u user bash << EOF
cd && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm &&
cd && rm -rf yay
EOF

    {{ else }}

cd && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si --noconfirm &&
cd && rm -rf yay

# Setup Nvidia if found
if lspci -k | grep -A 2 -E "(VGA|3D)" | grep -iq nvidia ; then
    yay -S --noconfirm --needed libva libva-nvidia-driver-git linux-headers nvidia-dkms nvidia-settings
    sudo sed -i 's/MODULES=()/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' /etc/mkinitcpio.conf
    sudo mkinitcpio --config /etc/mkinitcpio.conf --generate /boot/initramfs-custom.img
    echo -e "options nvidia-drm modeset=1" | sudo tee -a /etc/modprobe.d/nvidia.conf
    echo -e "WLR_NO_HARDWARE_CURSORS=1" | sudo tee -a /etc/environment
fi

# Install MBP audio driver if CS8409 found
if lsmod | grep cs8409 >/dev/null ; then
    cd && git clone https://github.com/davidjo/snd_hda_macbookpro.git
    cd snd_hda_macbookpro/ && sudo ./install.cirrus.driver.sh
fi

    {{ end }}

# Install listed pacakges
echo "${CYAN}NOTE${RESET} - Installing apps from list."
install_list $LISTAPP
fc-cache -fv

# Enable services
echo "${CYAN}NOTE${RESET} - Enabling services."
for service in ${SERVICES[@]} ; do
    sudo systemctl enable $service
    sleep 2
done

chmod +x $EXECUTABLE
sudo gpasswd -a $USER input
chsh -s $(which zsh) $USER

{{ end }}

echo "${CYAN}NOTE${RESET} - Installing custom app."
source $HOME/Scripts/custom.sh

echo "${CYAN}NOTE${RESET} - Setting some configuration."
source $HOME/Scripts/stage.sh
source $HOME/Scripts/config.sh

echo "${GREEN}OK${RESET} - Please log out and log back in for the changes to take effect."
