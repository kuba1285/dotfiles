#!{{ lookPath "bash" }}

# Define variables
TVERREC_URL=https://github.com/dongaba/TVerRec/archive/refs/tags/v3.0.2.tar.gz
ARCHIVE_NAME=$(basename $(echo $TVERREC_URL))
PARENT=$(cd $(dirname $0)/../; pwd)
BIN=$(cd $(dirname $0); pwd)
INSTLOG="$BIN/install.log"
LISTAPP="$BIN/list-app"
LISTNVIDIA=(
    libva
    libva-nvidia-driver-git
    linux-headers
    nvidia-dkms
    nvidia-settings
)
SERVICES=(
    sddm
    bluetooth
    tlp
    mbpfan
)

function set_colors() {
    if [ -t 1 ] ; then
        RED=$(tput setaf 1); GREEN=$(tput setaf 2); YELLOW=$(tput setaf 3);
        CYAN=$(tput setaf 6); BOLD=$(tput bold); RESET=$(tput sgr0)
    else
        RED=""; GREEN=""; YELLOW=""; CYAN=""; BOLD=""; RESET=""
    fi
}

function install_list() {
    while IFS= read -r app ; do
        yay -S --noconfirm --needed $app &>> $INSTLOG &
        show_progress $!
    done < "$1"
}

function wait_yn(){
    YN="xxx"
    while [ $YN != 'y' ] && [ $YN != 'n' ] ; do
        read -p "$1 [y/n]" YN
    done
}
######

clear
set_colors

# give the user an option to exit
wait_yn "${YELLOW}ACITION${RESET} - Would you like to start with the install?"
if [[ $YN = y ]] ; then
    echo "${CYAN}NOTE${RESET} - Setup starting..."
else
    echo "${RED}ATTENTION${RESET} - Aborted. No changes were made to your system."
    exit
fi

{{ if eq .chezmoi.os "darwin" }}

# Install rosetta
echo "${CYAN}NOTE${RESET} - Installing Rosetta."
sudo softwareupdate --install-rosetta --agree-to-licensesudo softwareupdate --install-rosetta --agree-to-license

# Install app from Brewfile
echo "${CYAN}NOTE${RESET} - Installing Brewfile app."
brew bundle install --file $BIN/Brewfile

{{ end }}

{{ if eq .chezmoi.os "linux" }}

# Install apps for AUR
echo "${CYAN}NOTE${RESET} - Updating and install apps for AUR."
pacman -Syu --noconfirm sudo base-devel

# Create user for AUR
useradd -m -g users -G wheel,audio,video,storage -s /bin/bash user
echo user:user | chpasswd
sudo sed -i -e "/^ *root ALL=(ALL:ALL) ALL$/c\root ALL=(ALL:ALL) ALL\n\user ALL=(ALL) ALL" /etc/sudoers

# Configure AUR
echo "${CYAN}NOTE${RESET} - Configuering AUR."
sudo -i -u user bash << EOF
cd &&
git clone https://aur.archlinux.org/yay.git &&
cd yay && yes user | makepkg -si --noconfirm &&
cd && rm -rf yay
EOF

# Install listed pacakges
echo "${CYAN}NOTE${RESET} - Installing apps from list."
install_list $LISTAPP
fc-cache -fv

# Enable services
echo "${CYAN}NOTE${RESET} - Enabling services."
for service in ${SERVICES[@]} ; do
    sudo systemctl enable $service --now
    sleep 2
done

{{ end }}

# Install custom app
echo "${CYAN}NOTE${RESET} - Installing custom app."
source $BIN/custom.sh

echo "${CYAN}NOTE${RESET} - Staging the files."
source $BIN/stage.sh

# Copy and write Config Files
echo "${CYAN}NOTE${RESET} - Setting configuration."
cp -rT $PARENT/. ~/
source $BIN/config.sh

chsh -s $(which zsh) $USER
echo "${GREEN}OK${RESET} - Script had completed!"
